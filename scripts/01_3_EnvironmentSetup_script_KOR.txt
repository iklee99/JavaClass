페이지 1
이번 강의에서는 자바 프로그램을 개발하는데 필요한 
소프트웨어 환경을 셋업 합니다.  
어렵지 않게 설치하고 사용할 수 있으니, 
잘 따라와 주기 바랍니다. 

페이지 2
자바 디벨롭먼트 킷 (제이디케이)는 
제이브이엠 뿐아니라 자바 프로그램 개발자를 위한 
여러가지 툴들을 포함하고 있는데, 
예를 들면, 자바씨, 즉, 자바 컴파일러,
자바, 즉, 바이트 코드 인터프리터 등입니다. 
제이디케이 중에서 개발자가 아닌 
프로그램 사용자만을 위한 서브셋을 추린 것을 
자바 런타임 인바이런먼트 (제이알이) 라고 합니다. 
즉, 사용자는 프로그램을 개발하는 사람은 아니기 때문에 
개발에만 사용되는 툴들을 제이디케이로 부터 제외한 것이 
제이알이라고 볼 수 있습니다. 
간혹 자바로 개발된 프로그램을 인스톨하여 실행시키려 할 떄, 
제이알이가 없으면 다운로드를 받으라는 안내가 나오는데, 
자바로 만들어진 프로그램의 실행에 있어서, 
제이알이는 필수이기 때문입니다. 
제이디케이와 제이알이는 자바의 소유사인 
오라클의 자바 테크놀로지 사이트에 가면 
다운로드 받을 수 있습니다. 

페이지 3
제이디케이를 다운 받기 위해, 오라클 테크놀로지 사이트에 가서, 
자바에스이의 최신 버전을 클릭 합니다. 

페이지 4
사용자의 오에스가 윈도우즈, 맥오에스 엠 칩스, 
맥오에스 인텔 칩스인지에 따라 
적절한 제이디케이를 다운받아 설치합니다.

페이지 5
제이디케이가 제대로 설치되었는지 체크하기 위해 
콘솔 윈도우를 띄우고 거기에서 
자바 버전 이라는 명령어를 실행합니다. 
자바 버전이 표시되면 제이디케이가 정확히 설치된 것입니다. 

페이지 6
제이디케이에 포함된 에이피아이들의 도큐멘테이션은 
오라클에서 온라인으로 제공하고 있습니다. 
독스 닷 오라클 닷 컴 슬래시 이엔 슬래시 자바 슬래시 자바에스이 를 방문하여 
설치한 제이디케이 버전을 클릭 합니다. 

페이지 7
왼쪽 메뉴 영역에서 에이피아이 도큐멘테이션을 선택합니다. 

페이지 8
에이피아이 도큐멘테이션 페이지에서 서치 창에 
원하는 클래스의 이름을 타이핑하여 서치 합니다. 
예를 들면 시스템 이라는 클래스를 서치 해 볼 수 있습니다. 

페이지 9
시스템 클래스에 대한 도큐멘테이션이 표시됩니다. 
클래스 이름 위에는 클래스가 속한 패키지의 이름이 표시 됩니다. 
예를 들면 시스템 클래스는 자바 닷 랭 패키지 안에 있습니다. 
필즈에는 클래스에 속하는 
인스턴스 베리어블이나 컨스턴트들에 대한 설명이 있습니다.

페이지 10
그 아래에는 클래스에 속하는 메소드들이 나열되어 
사용법을 볼 수 있습니다. 
메소드의 리턴 타입, 파라미터들과 
어떤 작업을 하는지를 볼 수 있는데
각 메소드 이름을 클릭하면 더 자세한 설명을 볼 수 있습니다. 

페이지 11
뒤에 설치할 아이디이, 즉, 
인티그레이티드 디벨롭먼트 인바이런먼트 를 사용해 보기 전에 
콘솔 윈도우에서 자바 소스 프로그램을 
컴파일하고 실행하는 과정을 살펴 보겠습니다. 
적당한 텍스트 에디터로 자바 프로그램의 
소스 코드를 작성합니다. 
이 예제에서는 퍼스트프로그램 닷 자바 라는 
클래스 소스 파일을 작성하였습니다. 
클래스의 이름과 소스 파일의 이름이 일치해야 합니다. 

페이지 12
콘솔 에서 소스 코드를 
바이트 코드로 컴파일하기 위해
"자바씨 퍼스트프로그램 닷 자바" 명령을 
타이핑하여 실행합니다. 
컴파일에 성공하면 퍼스트프로그램 닷 클래스 라는 
바이트코드 프로그램이 생성된 것을 확인할 수 있습니다. 
현재 폴더 안의 파일 리스트를 확인하기 위해 
윈도우즈에서는 "디아이알", 
맥오에스에서는 "엘에스" 명령을 사용할 수 있습니다. 
이제 바이트 코드 프로그램을 실행하기 위해 
제이브이엠 인터프리터 
"자바 퍼스트프로그램" 명령을 실행합니다. 
바이트 코드 프로그램 파일 이름인 
퍼스트프로그램 닷 클래스 에서 
익스텐션인 닷 클래스는 제외하고 명령을 타이핑해야 합니다. 
제이브이엠 이 실행되면서 "헬로 월드!" 라는 아웃풋이 
콘솔에 출력되는 것을 볼 수 있습니다. 

페이지 13
이제 아이디이, 즉, 인티그레이티드 디벨롭먼트 인바이런먼트 인 
인텔리제이 아이디이에이를 설치해 보겠습니다. 
젯브레인스사의 홈페이지에서 인텔리제이 아이디이에이의 
"커뮤니티 에디션" 을 다운 받아 설치하십시오. 
커뮤니티 버전은 무료 버전으로 
본 코스 정도의 학습에는 충분한 기능을 갖추고 있습니다. 

페이지 14
인텔리제이 아이디이에이를 설치한 후 실행하여 
뉴 프로젝트 버튼을 클릭합니다. 

페이지 15
프로젝트의 이름을 입력하고
프로젝트 파일들을 저장할 폴더 위치를 선택합니다. 
깃을 사용한다면 "크리에이트 깃 리포지토리" 를 체크하여 
완성된 소스 코드들을 깃허브에 자동으로 업로드할 수 있습니다. 
여기서는 이 옵션을 선택하지는 않도록 하겠습니다. 
여러 개의 제이디케이 버전들이 설치되어 있다면 
그 중에 원하는 제이디케이를 선택할 수 있습니다. 
보통 가장 최신에 설치한 최신 버전의 제이디케이를 선택하면 됩니다. 
"애드 샘플 코드" 옵션은 인텔리제이 아이디이에이가 
자동으로 샘플 코드를 생성해 주는 기능입니다만 
여기에서는 이 옵션을 선택하지 않도록 하겠습니다. 
모든 입력이 끝나면 왼쪽 맨 아래 "크리에이트" 버튼을 눌러 
프로젝트를 생성합니다. 

페이지 16
이제 방금 생성한 프로젝트 화면으로 전환됩니다. 
아직 아무런 소스 코드를 생성하지 않았기 때문에 
에스알씨 폴더는 비어있습니다. 

페이지 17
에스알씨 폴더 위에 마우스 포인터를 위치시키고 
라이트 마우스 버튼을 눌러 팝업 메뉴가 나오게 합니다. 
메뉴에서 뉴 를 선택한 후
보여지는 서브 메뉴에서 자바 클래스를 선택합니다. 

페이지 18
뉴 자바 클래스 창이 나오면 
맨 위에 생성할 클래스 이름을 타이핑하고 엔터를 누릅니다. 
여기서는 "테스트클래스" 라는 클래스 이름을 입력하였습니다. 

페이지 19
이제 "테스트클래스 닷 자바" 소스 파일이 생성됩니다. 
클래스 네임과 소스 파일의 이름이 
반드시 같아야 한다는 점을 다시 한번 강조합니다. 
이제 소스 입력 창에 프로그램 소스를 타이핑하면 됩니다. 

페이지 20
이제 소스 파일을 바이트코드로 컴파일하기 위해 
빌드 메뉴에서 빌드 프로젝트를 선택합니다. 
단축키는 윈도우즈에서 컨트롤 플러스 에프나인, 
맥오에스에서는 커맨드 플러스 에프엔 플러스 에프나인 입니다. 

페이지 21
이제 왼쪽의 파일 내비게이터에 
"아웃" 폴더가 생성된 것을 확인할 수 있습니다. 
아웃 그레이터 댄 프로덕션 그레이터 댄 테스트프로젝트 폴더 아래
"테스트클래스" 가 생성되었는데, 
이것이 바이트코드 파일인 
테스트클래스 닷 클래스 파일을 나타냅니다. 
실제로 바이트코드파일이 생성되었는지 확인하기 위해 
익스플로러 (윈도우즈) 또는 파인더 (맥오에스) 에서
아웃 폴더 아래 테스트클래스 닷 클래스 파일이 생성된 것을 
확인해 보십시오. 

페이지 22
제이브이엠 인터프리터를 실행하여 바이트코드 프로그램을 실행하려면 
컨트롤 플러스 알 을 선택하던지
런 버튼 (플레이 삼각형 모양) 을 클릭 합니다. 
프로그램의 아웃풋이 인텔리제이 하단의 
터미널 윈도우에 출력되는 것을 확인할 수 있습니다. 

페이지 23
작업을 마친 후에는 "파일 그레이터 댄 클로즈 프로젝트" 메뉴를 선택하여 
프로젝트를 닫을 수 있습니다. 
프로젝트를 클로즈한 후에는 
작성한 모든 프로젝트들의 리스트를 볼 수 있으며 
각 프로젝트를 마우스로 선택하여 프로젝트로 진입할 수 있습니다. 

페이지 24
이번에는 이미 작성된 소스 파일들을 
인텔리제이에 불러들이는 방법에 대해 알아보겠습니다. 
소스 파일들은 프로젝트 이름을 가진 폴더 아래 
에스알씨 폴더 아래 자바 소스 파일들을 가지고 있는 형식이어야 합니다. 

페이지 25
메인 메뉴에서 파일 그레이터 댄 오픈 메뉴를 선택하고
미리 준비된 프로젝트 폴더를 선택합니다. 

페이지 26
프로젝트가 인텔리제이로 읽어져 만들어지면서 
에스알씨 폴더 아래 소스 파일들이 자리잡게 됩니다.
