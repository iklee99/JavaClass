1
00:00:00,000 --> 00:00:01,230
Page 1

2
00:00:01,230 --> 00:00:05,120
이번 강의에서는 자바 프로그램을 개발하는데 필요한

3
00:00:05,120 --> 00:00:07,760
소프트웨어 환경을 셋업 합니다.

4
00:00:07,760 --> 00:00:10,270
어렵지 않게 설치하고 사용할 수 있으니,

5
00:00:10,270 --> 00:00:12,460
잘 따라와 주기 바랍니다.

6
00:00:12,460 --> 00:00:13,660
Page 2

7
00:00:13,660 --> 00:00:16,790
Java Development Kit (JDK)는

8
00:00:16,790 --> 00:00:20,580
JVM 뿐아니라 자바 프로그램 개발자를 위한

9
00:00:20,580 --> 00:00:22,770
여러가지 tool들을 포함하고 있는데,

10
00:00:22,770 --> 00:00:26,530
예를 들면, javac, 즉, Java compiler,

11
00:00:26,530 --> 00:00:30,450
java, 즉, byte code interpreter 등입니다.

12
00:00:30,450 --> 00:00:32,660
JDK 중에서 개발자가 아닌

13
00:00:32,660 --> 00:00:36,250
프로그램 사용자만을 위한 subset을 추린 것을

14
00:00:36,250 --> 00:00:40,090
Java Runtime Environment (JRE) 라고 합니다.

15
00:00:40,090 --> 00:00:44,350
즉, 사용자는 프로그램을 개발하는 사람은 아니기 때문에

16
00:00:44,350 --> 00:00:48,740
개발에만 사용되는 tool들을 JDK로 부터 제외한 것이

17
00:00:48,740 --> 00:00:51,060
JRE라고 볼 수 있습니다.

18
00:00:51,060 --> 00:00:55,400
간혹 Java로 개발된 프로그램을 Install하여 실행시키려 할 떄,

19
00:00:55,400 --> 00:00:59,080
JRE가 없으면 다운로드를 받으라는 안내가 나오는데,

20
00:00:59,080 --> 00:01:01,850
Java로 만들어진 프로그램의 실행에 있어서,

21
00:01:01,850 --> 00:01:04,590
JRE는 필수이기 때문입니다.

22
00:01:04,590 --> 00:01:08,170
JDK와 JRE는 Java의 소유사인

23
00:01:08,170 --> 00:01:11,330
Oracle의 Java Technology Site에 가면

24
00:01:11,330 --> 00:01:13,520
다운로드 받을 수 있습니다.

25
00:01:13,520 --> 00:01:14,800
Page 3

26
00:01:14,800 --> 00:01:19,210
JDK를 다운 받기 위해, Oracle Technology 사이트에 가서,

27
00:01:19,210 --> 00:01:22,400
JavaSE의 최신 버전을 click 합니다.

28
00:01:22,400 --> 00:01:23,680
Page 4

29
00:01:23,680 --> 00:01:27,780
사용자의 OS가 Windows, macOS M Chips,

30
00:01:27,780 --> 00:01:30,520
macOS intel chips인지에 따라

31
00:01:30,520 --> 00:01:33,840
적절한 JDK를 다운받아 설치합니다.

32
00:01:33,840 --> 00:01:35,150
Page 5

33
00:01:35,150 --> 00:01:38,860
JDK가 제대로 설치되었는지 check하기 위해

34
00:01:38,860 --> 00:01:41,580
console window를 띄우고 거기에서

35
00:01:41,580 --> 00:01:45,500
java -version 이라는 명령어를 실행합니다.

36
00:01:45,500 --> 00:01:50,020
Java version이 표시되면 JDK가 정확히 설치된 것입니다.

37
00:01:50,020 --> 00:01:51,300
Page 6

38
00:01:51,300 --> 00:01:55,450
JDK에 포함된 API들의 documentation은

39
00:01:55,450 --> 00:01:58,480
Oracle에서 online으로 제공하고 있습니다.

40
00:01:58,480 --> 00:02:05,400
docs.oracle.com/en/java/javase 를 방문하여

41
00:02:05,400 --> 00:02:08,530
설치한 JDK version을 click 합니다.

42
00:02:08,530 --> 00:02:09,890
Page 7

43
00:02:09,890 --> 00:02:14,720
왼쪽 메뉴 영역에서 API Documentation을 선택합니다.

44
00:02:14,720 --> 00:02:16,080
Page 8

45
00:02:16,080 --> 00:02:19,740
API Documentation page에서 search 창에

46
00:02:19,740 --> 00:02:23,190
원하는 class의 이름을 typing하여 search 합니다.

47
00:02:23,190 --> 00:02:27,500
예를 들면 ‘System’ 이라는 class를 search 해 볼 수 있습니다.

48
00:02:27,500 --> 00:02:28,860
Page 9

49
00:02:28,860 --> 00:02:32,650
‘System’ class에 대한 documentation이 표시됩니다.

50
00:02:32,650 --> 00:02:37,220
Class 이름 위에는 class가 속한 package의 이름이 표시 됩니다.

51
00:02:37,220 --> 00:02:42,240
예를 들면 System class는 java.lang package 안에 있습니다.

52
00:02:42,240 --> 00:02:44,560
Fields에는 class에 속하는

53
00:02:44,560 --> 00:02:48,870
instance variable이나 constant들에 대한 설명이 있습니다.

54
00:02:48,870 --> 00:02:50,150
Page 10

55
00:02:50,150 --> 00:02:53,830
그 아래에는 class에 속하는 method들이 나열되어

56
00:02:53,830 --> 00:02:55,970
사용법을 볼 수 있습니다.

57
00:02:55,970 --> 00:02:59,080
method의 return type, parameter들과

58
00:02:59,080 --> 00:03:01,670
어떤 작업을 하는지를 볼 수 있는데

59
00:03:01,670 --> 00:03:06,190
각 method 이름을 click하면 더 자세한 설명을 볼 수 있습니다.

60
00:03:06,190 --> 00:03:07,680
Page 11

61
00:03:07,680 --> 00:03:09,900
뒤에 설치할 IDE, 즉,

62
00:03:09,900 --> 00:03:14,600
Integrated Development Environment 를 사용해 보기 전에

63
00:03:14,600 --> 00:03:17,890
Console window에서 Java source program을

64
00:03:17,890 --> 00:03:21,290
compile하고 실행하는 과정을 살펴 보겠습니다.

65
00:03:21,290 --> 00:03:24,560
적당한 text editor로 java 프로그램의

66
00:03:24,560 --> 00:03:26,860
source code를 작성합니다.

67
00:03:26,860 --> 00:03:30,440
이 예제에서는 FirstProgram.java 라는

68
00:03:30,440 --> 00:03:33,370
class source 파일을 작성하였습니다.

69
00:03:33,370 --> 00:03:37,130
class의 이름과 source file의 이름이 일치해야 합니다.

70
00:03:37,130 --> 00:03:38,650
Page 12

71
00:03:38,650 --> 00:03:40,790
Console 에서 source code를

72
00:03:40,790 --> 00:03:44,690
byte code로 compile하기 위해

73
00:03:44,690 --> 00:03:46,520
“Javac FirstProgram.java” 명령을

74
00:03:46,520 --> 00:03:48,580
typing하여 실행합니다.

75
00:03:48,580 --> 00:03:52,550
Compile에 성공하면 FirstProgram.class 라는

76
00:03:52,550 --> 00:03:56,630
bytecode 프로그램이 생성된 것을 확인할 수 있습니다.

77
00:03:56,630 --> 00:03:59,950
현재 폴더 안의 파일 리스트를 확인하기 위해

78
00:03:59,950 --> 00:04:02,170
Windows에서는 “dir”,

79
00:04:02,170 --> 00:04:06,220
macOS에서는 “ls” 명령을 사용할 수 있습니다.

80
00:04:06,220 --> 00:04:09,350
이제 Byte code 프로그램을 실행하기 위해

81
00:04:09,350 --> 00:04:11,570
JVM interpreter

82
00:04:11,570 --> 00:04:14,700
“java FirstProgram” 명령을 실행합니다.

83
00:04:14,700 --> 00:04:17,440
Byte code 프로그램 파일 이름인

84
00:04:17,440 --> 00:04:19,970
FirstProgram.class 에서

85
00:04:19,970 --> 00:04:24,830
extension인 .class는 제외하고 명령을 typing해야 합니다.

86
00:04:24,830 --> 00:04:29,580
JVM 이 실행되면서 “Hello World!” 라는 output이

87
00:04:29,580 --> 00:04:32,530
console에 출력되는 것을 볼 수 있습니다.

88
00:04:32,530 --> 00:04:34,100
Page 13

89
00:04:34,100 --> 00:04:39,640
이제 IDE, 즉, Integrated Development Environment 인

90
00:04:39,640 --> 00:04:42,830
IntelliJ IDEA를 설치해 보겠습니다.

91
00:04:42,830 --> 00:04:47,090
jetbrains사의 홈페이지에서 IntelliJ IDEA의

92
00:04:47,090 --> 00:04:50,540
“community edition” 을 다운 받아 설치하십시오.

93
00:04:50,540 --> 00:04:53,150
Community version은 무료 버전으로

94
00:04:53,150 --> 00:04:57,300
본 코스 정도의 학습에는 충분한 기능을 갖추고 있습니다.

95
00:04:57,300 --> 00:04:58,870
Page 14

96
00:04:58,870 --> 00:05:02,580
IntelliJ IDEA를 설치한 후 실행하여

97
00:05:02,580 --> 00:05:05,190
New Project 버튼을 click합니다.

98
00:05:05,190 --> 00:05:06,710
Page 15

99
00:05:06,710 --> 00:05:09,010
프로젝트의 이름을 입력하고

100
00:05:09,010 --> 00:05:12,950
프로젝트 파일들을 저장할 폴더 위치를 선택합니다.

101
00:05:12,950 --> 00:05:17,390
Git을 사용한다면 “Create Git repository” 를 check하여

102
00:05:17,390 --> 00:05:22,120
완성된 source code들을 github에 자동으로 upload할 수 있습니다.

103
00:05:22,120 --> 00:05:25,780
여기서는 이 옵션을 선택하지는 않도록 하겠습니다.

104
00:05:25,780 --> 00:05:29,380
여러 개의 JDK version들이 설치되어 있다면

105
00:05:29,380 --> 00:05:32,930
그 중에 원하는 JDK를 선택할 수 있습니다.

106
00:05:32,930 --> 00:05:38,290
보통 가장 최신에 설치한 최신 버전의 JDK를 선택하면 됩니다.

107
00:05:38,290 --> 00:05:42,420
“Add sample code” option은 IntelliJ IDEA가

108
00:05:42,420 --> 00:05:46,000
자동으로 sample code를 생성해 주는 기능입니다만

109
00:05:46,000 --> 00:05:49,660
여기에서는 이 옵션을 선택하지 않도록 하겠습니다.

110
00:05:49,660 --> 00:05:53,550
모든 입력이 끝나면 맨 아래 “Create” button을 눌러

111
00:05:53,550 --> 00:05:55,640
project를 생성합니다.

112
00:05:55,640 --> 00:05:57,160
Page 16

113
00:05:57,160 --> 00:06:00,900
이제 방금 생성한 프로젝트 화면으로 전환됩니다.

114
00:06:00,900 --> 00:06:04,400
아직 아무런 source code를 생성하지 않았기 때문에

115
00:06:04,400 --> 00:06:07,060
src 폴더는 비어있습니다.

116
00:06:07,060 --> 00:06:08,680
Page 17

117
00:06:08,680 --> 00:06:12,490
Src 폴더 위에 mouse pointer를 위치시키고

118
00:06:12,490 --> 00:06:16,230
right mouse button을 눌러 popup 메뉴가 나오게 합니다.

119
00:06:16,230 --> 00:06:18,630
메뉴에서 New 를 선택한 후

120
00:06:18,630 --> 00:06:22,500
보여지는 sub menu에서 Java Class를 선택합니다.

121
00:06:22,500 --> 00:06:24,070
Page 18

122
00:06:24,070 --> 00:06:26,370
New Java Class 창이 나오면

123
00:06:26,370 --> 00:06:30,760
맨 위에 생성할 class 이름을 typing하고 enter를 누릅니다.

124
00:06:30,760 --> 00:06:35,100
여기서는 “TestClass” 라는 class 이름을 입력하였습니다.

125
00:06:35,100 --> 00:06:36,640
Page 19

126
00:06:36,640 --> 00:06:40,720
이제 “TestClass.java” source file이 생성됩니다.

127
00:06:40,720 --> 00:06:43,460
Class name과 source file의 이름이

128
00:06:43,460 --> 00:06:47,250
반드시 같아야 한다는 점을 다시 한번 강조합니다.

129
00:06:47,250 --> 00:06:51,350
이제 source 입력 창에 프로그램 source를 typing하면 됩니다.

130
00:06:51,350 --> 00:06:52,730
Page 20

131
00:06:52,730 --> 00:06:56,330
이제 source file을 bytecode로 compile하기 위해

132
00:06:56,330 --> 00:06:59,800
Build menu에서 Build Project를 선택합니다.

133
00:06:59,800 --> 00:07:03,670
단축키는 Windows에서 Ctrl + F9,

134
00:07:03,670 --> 00:07:08,420
macOS에서는 Command + fn + F9 입니다.

135
00:07:08,420 --> 00:07:10,040
Page 21

136
00:07:10,040 --> 00:07:12,600
이제 왼쪽의 file navigator에

137
00:07:12,600 --> 00:07:16,920
“out” folder가 생성된 것을 확인할 수 있습니다.

138
00:07:16,920 --> 00:07:21,220
out > production > TestProject 폴더 아래

139
00:07:21,220 --> 00:07:23,540
“TestClass” 가 생성되었는데,

140
00:07:23,540 --> 00:07:26,890
이것이 bytecode file인

141
00:07:26,890 --> 00:07:29,290
TestClass.class 파일을 나타냅니다.

142
00:07:29,290 --> 00:07:33,570
실제로 bytecode파일이 생성되었는지 확인하기 위해

143
00:07:33,570 --> 00:07:37,650
explorer (Windows) 또는 finder (macOS) 에서

144
00:07:37,650 --> 00:07:42,380
out 폴더 아래 TestClass.class 파일이 생성된 것을

145
00:07:42,380 --> 00:07:43,970
확인해 보십시오.

146
00:07:43,970 --> 00:07:45,620
Page 22

147
00:07:45,620 --> 00:07:50,770
JVM interpreter를 실행하여 bytecode 프로그램을 실행하려면

148
00:07:50,770 --> 00:07:53,700
Ctrl + r 을 선택하던지

149
00:07:53,700 --> 00:07:57,280
Run button (play 삼각형 모양) 을 click 합니다.

150
00:07:57,280 --> 00:08:00,620
program의 output이 IntelliJ 하단의

151
00:08:00,620 --> 00:08:04,430
terminal window에 출력되는 것을 확인할 수 있습니다.

152
00:08:04,430 --> 00:08:06,150
Page 23

153
00:08:06,150 --> 00:08:10,700
작업을 마친 후에는 “File > Close Project” menu를 선택하여

154
00:08:10,700 --> 00:08:13,050
project를 닫을 수 있습니다.

155
00:08:13,050 --> 00:08:15,400
Project를 close한 후에는

156
00:08:15,400 --> 00:08:19,110
작성한 모든 project들의 list를 볼 수 있으며

157
00:08:19,110 --> 00:08:23,810
각 프로젝트를 마우스로 선택하여 project로 진입할 수 있습니다.

158
00:08:23,810 --> 00:08:25,460
Page 24

159
00:08:25,460 --> 00:08:28,590
이번에는 이미 작성된 source file들을

160
00:08:28,590 --> 00:08:32,480
IntelliJ에 불러들이는 방법에 대해 알아보겠습니다.

161
00:08:32,480 --> 00:08:36,140
Source file들은 프로젝트 이름을 가진 폴더 아래

162
00:08:36,140 --> 00:08:41,340
src 폴더 아래 java source file들을 가지고 있는 형식이어야 합니다.

163
00:08:41,340 --> 00:08:43,010
Page 25

164
00:08:43,010 --> 00:08:46,280
Main menu에서 File > Open 메뉴를 선택하고

165
00:08:46,280 --> 00:08:49,620
미리 준비된 project 폴더를 선택합니다.

166
00:08:49,620 --> 00:08:51,270
Page 26

167
00:08:51,270 --> 00:08:54,610
프로젝트가 IntelliJ로 읽어져 만들어지면서

168
00:08:54,610 --> 00:08:58,580
src 폴더 아래 source file들이 자리잡게 됩니다.
