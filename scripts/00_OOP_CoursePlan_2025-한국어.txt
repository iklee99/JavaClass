객체지향프로그래밍 (CCO1102) 의 수업 계획 입니다
수업시간은 주당 세시간 입니다
이 중에 주간 두 시간은
오프라인 수업으로 진행하며,
늦은 저녁으로 잡혀있는 한 시간은
비디오강의로 대체합니다
오프라인 수업의 강의실은
제4공학관 D504호 입니다
강의는 컴퓨터과학과 이인권 교수가 담당하며,
이메일은 iklee@yonsei.ac.kr 입니다
이인권 교수의 연구실은
제4공학관 D719호 입니다
면담시간은 기본적으로
수업 전후 한 시간씩 가능합니다만,
되도록 이메일로 예약해 주기 바랍니다
오프라인 수업 중 실습 시간에
간단한 개인면담이 가능하니 활용해 주세요
교수 이외에 두 명의 TA가 있습니다.
노트에서 TA의 이메일 주소를 확인하기 바랍니다
TA들은 제4공학관 D712호
컴퓨터그래픽스 연구실에 상주합니다
본 과목에서는 Java 프로그래밍 언어를 사용하며
객체지향프로그래밍에 대한
이론과 실습을 제공합니다
본 과목은 초보자가 아닌,
이미 프로그래밍 경험이 있는 수강생들을 대상으로 합니다
객체지향프로그래밍, 영어로는 Object-Oriented Programming,
줄여서 OOP 라고 하는데요
OOP의 기본 개념으로는
Class, Object, Inheritance, Polymorphism
Encapsulation 등이 있습니다
이러한 개념들을 통해
강력하고, 재사용 가능하며,
유지관리가 가능한
효율적인 소프트웨어 시스템을
설계 구현하는 방법을 학습할 수 있습니다
과목 전반적으로는 Java 언어를 사용하여
실제 프로그래밍 문제를 해결하는데
필요한 기술들을 학습합니다
본 과목은
적어도 하나 이상의 프로그래밍 언어에 대한
학습 경험이 있는 수강생들을 대상으로 합니다
연세대학교에서 제공되는
기초 프로그래밍 과목들을 살펴보면,
이 슬라이드에서 나열한
매우 다양한 과목들이 있습니다
물론, 이 외에도 각 단꽈대학이나
학과에서 제공되고 있는
기초 프로그래밍 과목들
또는 개설 과목이 아니더라도
인터넷 강의 등 다른 경로를 통해 학습한 경우도
가능합니다
즉, 본 과목은 기초 프로그래밍 부분을 다루기는 하지만,
그 부분이 매우 빠르게 진행되기 때문에,
프로그래밍을 처음 접하는 사람에게는
적합하지 않다는 뜻입니다
과목 수강 여부를 결정하는데
이러한 사실이 도움이 되기를 바랍니다
주교재가 되는 책은 따로 존재하지 않으며,
강의노트와 비디오 강의만으로 수업을 진행합니다
사실 Java 언어와 객체지향프로그래밍을 다루는
좋은 교재들은 매우 많으며,
특히 인터넷에는 유, 무료의
좋은 강의들이 많이 있습니다
그 중에서 최근에 평가가 좋은 참고 문헌을 살펴보면,
한글로 된 교재로는 "이것이 자바다" 라는 책이 있으며,
영문으로 된 교재 중에는
크리스티안 울렌붐의 "Java: The Comprehensive Guide to Java Programming for Professionals"
등이 있습니다
수업진행방식에 대해 소개하겠습니다
학생들은 매주 제공되는 강의노트와
강의를 녹화한 비디오 강의를 시청하고
Quiz를 풀어 제출합니다
또한 학생들에게는 매주 두세 개의
프로그래밍 과제 문제들이 주어집니다
학생들은 오프라인 강의 시간 동안 진행되는 실습 시간에
그 문제들을 같은 팀의 학생들과 의논하며 해결할 수 있습니다
실습시간에 다 풀지 못한 문제들은
그 다음 주 오프라인 수업 전날 자정까지 제출하면 됩니다
프로그래밍 실습과 과제 제출은
auto-judge server를 통해 진행됩니다
auto-judge server는 수강생이 제출하는 프로그램을
자동으로 채점하여,
제출한 프로그램이 정상적으로 작동하고
문제의 조건들을 다 만족하는 경우
그 과제 제출을 accept 합니다
성적 평가에 가장 비중이 높은 중간고사와 기말고사는
closed-book의 필답고사이며,
코딩, 주관식, 단답형, 다지선다형 등
다양한 유형의 문제들을 포함합니다
여러분들이 가장 관심있어 할
성적 평가 기준에 대해 말씀드리겠습니다
본 과목은 상대평가 과목입니다
따라서 A와 B학점의 최대 비율이 제한되어 있습니다
참고로 저는 특이 사항이 없는 경우
A와 B 학점의 비율을 거의 최대로 매겨왔습니다
세부 성적 평가 기준은, 중간과 기말고사가 각각 35%,
프로그래밍 과제가 15%, 퀴즈 10%, 출석 3%,
그리고 Q/A 참여도를 2%로 채점합니다
모든 질문과 답변은 LearnUs의 Q/A 게시판을 통해 이루어집니다
학생들은 익명으로 질문과 답변을 할 수 있으며
유용한 정보 등을 공유할 수 있습니다
참여도 점수는 질문이 아니라 답변이나 유용한 정보에 대한
참여도를 기준으로 매겨집니다
출석에 대해 덧붙이면, 본 과목은 지정 좌석제를 사용합니다
두번째 주 부터는 같은 팀 멤버들 세명이 모여 앉게 됩니다
따라서 출석 체크는 TA가 하게 됩니다
또, 비디오 강의 시청 여부에 따라
야간 한시간 분량의 출석이 자동 체크되므로
반드시 강의 비디오를 시청하기 바랍니다
주간별 학습 스케쥴을 대략적으로 살펴보겠습니다
먼저 첫 주에는 객체지향프로그래밍에 대한 소개,
Java 언어에 대한 소개와 함께,
프로그래밍 환경을 셋업합니다
오프라인 강의시간에 마치지 못한 강의는
비디오 강의로 시청하고
다음 주 오프라인 수업 전날 자정까지 Quiz를 풀어 제출해야 합니다
2주차 부터는 비디오강의와 퀴즈가
매주 업로드 됩니다
학생들은 그 다음주 목요일 자정까지
비디오강의를 시청하고 퀴즈를 풀어 제출합니다
오프라인 수업시간에는
그 전주에 비디오 강의로 학습한 내용을 바탕으로
프로그래밍 실습 과제 문제들이 출제 됩니다
학생들은 실습 시간에 팀원들과 상의하며
문제를 풀 수 있으며,
TA와 교수에게 자유롭게 질문할 수 있습니다
실습 과제의 해답은 그 다음주 오프라인 수업 전날 자정 이전에
auto-judge server에 제출, accept를 받아야 합니다
2주차의 학습 내용은 OOP 개념 전의 Java 기본 프로그래밍,
즉, Operator, Control Structure,
Screen Input/Output과 함께 String class를 포함합니다
3주차에는 본격적인 OOP 개념에 앞서 알아야 할
reference type, array, enumeration type을 학습하며,
4주차와 5주차에 걸쳐서
OOP 개념에서 가장 기본이 되는 classs에 대해 학습하는데,
분량이 많아서 두 주에 걸쳐 나누었습니다
이 중 4주차에는 class, object, instance의 개념,
variable이나 constant 등의 field와 함께
constructor (생성자) 에 대해 학습합니다
5주차에는 method, instance와 static 멤버의 차이,
package와 access modifier 들에 대해 학습합니다
6주차에는 OOP에서 매우 중요한 개념인
inheritance, 즉, 상속에 대해 학습합니다
type conversion과 polymorphism의 개념,
abstract class의 의미 등에 대해 학습합니다
7주차에는 class보다 더 자유도가 높은
interface에 대해 학습하며,
nested class와 nested interface에 대해 학습합니다
8주차에는 중간고사를 치룹니다
9주차에는 피할 수 있는 소프트웨어 오류를 처리할 수 있는
exception handling 메카니즘에 대해 학습합니다
10주차에는 모든 class의 조상이 되는 Object class와
type을 갈아끼워가며 사용할 수 있는
generic에 대해 소개합니다
11주차에는 Java가 제공하는 강력한 기본 데이터 구조인 Collection Framework에 대해 학습합니다. 
12주차에는 recursion에 대해 학습합니다. 
13주차에는 Java가 제공하는 multi-thread기능을 통해 여러 작업을 동시에 수행하면서 그 순서를 컨트롤 할 수 있는 기능을 학습합니다. 
14주차에는 익명의 함수를 만들어 간결하게 처리할 수 있는 Lambda Expression과 design pattern에 대해 학습합니다
마지막 주에는 기말고사를 치룹니다